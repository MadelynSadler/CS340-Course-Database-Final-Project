-- Data Manipulation Queries, generated to assist in coding a UI backend to interact with a database.

-- colon : character is used to denote variables filled by the user or the back-end code

-- foreign keys are generated by the page
-- update should be able to set a foreign key value to NULL

-- select queries (5 - one for each table and each relationship)
-- all information selects
SELECT Assignments.assignmentID, Classes.className, Assignments.dueDate, Assignments.weight, Assignments.description 
FROM Assignments
INNER JOIN Classes ON Classes.classNumber = Assignments.classNumber;

SELECT * FROM Students;

SELECT * FROM Classes;

SELECT ClassesStudents.registrationID, Classes.className, studentID
FROM ClassesStudents
INNER JOIN Classes on Classes.classNumber = ClassesStudents.classNumber;

SELECT Sessions.sessionID, Classes.classNumber, Sessions.day, Sessions.week, Sessions.topic
FROM Sessions
INNER JOIN Classes on Classes.classNumber = Sessions.classNumber;

-- all assignments from a class
SELECT Assignments.assignmentID, Assignments.dueDate, Assignments.weight, Assignments.description
FROM Assignments
JOIN Classes ON Assignments.classNumber = Classes.classNumber
WHERE Classes.className = :className
ORDER BY Assignments.dueDate ASC;

-- select all students registered in a class
SELECT Students.studentID from Students
JOIN ClassesStudents ON Stduents.studentID = ClassesStudents.studentID
JOIN Classes on ClassesStudents.classNumber = Classes.classNumber
WHERE Classes.className = :className
ORDER BY Students.studentID ASC;

-- select all sessions for a particular class
SELECT Sessions.day, Sessions.week, Sessions.topic from Sessions
Join Classes on Sessions.classNumber = Classes.classNumber
Where Classes = :className
ORDER BY Sessions.day ASC;

-- select all classes a certain student is registered for
SELECT Classes.* from Classes
JOIN ClassesStudents ON Classes.classNumber = ClassesStudents.classNumber
JOIN Students ON ClassesStudents.studentID = Students.studentID
Where Students.studentID = :studentID
ORDER BY Classes.classNumber ASC;

-- select all classes that a certain professor teaches
SELECT * FROM Classes
WHERE professorName = :professorName;

-- foreign key drop down selects
SELECT classNumber from ClassesStudents;
SELECT studentID from ClassesStudents;
SELECT classNumber from Sessions;
SELECT classNumber from Assignments;

-- insertion queries (5 - one for each table)
INSERT INTO Classes (className, professorName, term, location, meetingTime)
VALUES
(:className, professorName, :term, :location, :meetingTime);

INSERT INTO Sessions (classNumber, day, week, topic)
VALUES
(:classNumber, :day, :week, :topic);

INSERT INTO Assignments (classNumber, dueDate, weight, description)
VALUES
(:classNumber, :dueDate, :weight, :description);

INSERT INTO Students () values ();

INSERT INTO ClassesStudents (classNumber, studentID)
VALUES
(:classNumber, :studentID)

-- update queries (1 - a NULLable relationship)

UPDATE Classes
SET
    className = :className,
    professorName = :professorName,
    term = :term,
    location = :location,
    meetingTime = :meetingTime
WHERE classNumber = :classNumber;

UPDATE Sessions
SET
    classNumber = :classNumber,
    day = :date,
    week = :week,
    topic = :topic
WHERE sessionID = :sessionID;

UPDATE Assignments
SET
    classNumber = :classNumber,
    dueDate = :dueDate,
    weight = :weight,
    description = :description
WHERE assignmentID = :assignmentID;

UPDATE ClassesStudents
SET
    classNumber = :classNumber,
    studnetID = :studentID
WHERE registrationID = :registrationID

-- delete queries (1 from M:N)
DELETE FROM Classes where className = :className;
DELETE FROM ClassesStudents where registrationID = :registrationID;
DELETE FROM Assignments where assignemntID = :assignemntID;
DELETE FROM Sessions where sessionID = :sessionID;
DELETE FROM Students where studentID = :studentID;  
